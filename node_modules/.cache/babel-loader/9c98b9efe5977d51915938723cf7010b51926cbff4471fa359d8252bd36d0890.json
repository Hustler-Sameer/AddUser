{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\25700\\\\Desktop\\\\React\\\\userInput\\\\src\\\\components\\\\Users\\\\AddUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from './AddUser.module.css';\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Wrapper from \"../helpers/Wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddUser = props => {\n  _s();\n  const [error, setError] = useState();\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    console.log('Form Submitted');\n    console.log(nameInputRef.current.value, ageInputRef.current.value);\n    const enteredUserName = nameInputRef.current.value;\n    const enteredUserAge = ageInputRef.current.value;\n    if (enteredUserName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        message: 'Please enter a valid name and age (non empty values)'\n      });\n      return;\n    }\n    if (+enteredUserAge < 1) {\n      setError({\n        title: 'Invalid Age',\n        message: 'Please enter a valid Age (Age > 0)'\n      });\n      return;\n    }\n    props.onAddUser(enteredUserName, enteredUserAge);\n    //lifting state up\n  };\n  // const onUsernameHandler = event => {\n  //     setEnteredUsername(event.target.value)\n  //  value={enteredUsername} onChange={onUsernameHandler} was passed in input\n  // }\n  // const onAgeHandler = (event) => {\n  //     setEnteredAge(event.target.value);\n  //value={enteredAge} onChange={onAgeHandler} was passed in input\n\n  // }\n  const setErrorHandler = () => {\n    setError(null);\n  };\n\n  // onError handler we have create in error modal and also we have passed it \n  // if not understanding revisit video 131 of react course on udemy\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: setErrorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Age\",\n          children: \"Age Years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"Age\",\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n// in input we are passing entered username as wee need to clear it once the form is submitted\n_s(AddUser, \"nOlAvmRolsXeRNVuUxYZuKFzmyU=\");\n_c = AddUser;\nexport default AddUser;\nvar _c;\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","useRef","Card","classes","Button","ErrorModal","Wrapper","jsxDEV","_jsxDEV","AddUser","props","_s","error","setError","nameInputRef","ageInputRef","onSubmitHandler","event","preventDefault","console","log","current","value","enteredUserName","enteredUserAge","trim","length","title","message","onAddUser","setErrorHandler","children","onConfirm","fileName","_jsxFileName","lineNumber","columnNumber","className","input","onSubmit","htmlFor","type","id","ref","_c","$RefreshReg$"],"sources":["C:/Users/25700/Desktop/React/userInput/src/components/Users/AddUser.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from './AddUser.module.css'\r\nimport Button from \"../UI/Button\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\nimport Wrapper from \"../helpers/Wrapper\";\r\n\r\n\r\n\r\nconst AddUser = (props) => {\r\n    \r\n    const [error, setError] = useState();\r\n    const nameInputRef = useRef();\r\n    const ageInputRef = useRef();\r\n\r\n    const onSubmitHandler = event => {\r\n        event.preventDefault();\r\n        console.log('Form Submitted')\r\n        console.log(nameInputRef.current.value , ageInputRef.current.value)\r\n        const enteredUserName = nameInputRef.current.value;\r\n        const enteredUserAge= ageInputRef.current.value;\r\n        if (enteredUserName.trim().length === 0 || enteredUserAge.trim().length === 0) {\r\n            setError({\r\n                title: 'Invalid input',\r\n                message: 'Please enter a valid name and age (non empty values)'\r\n            })\r\n            return;\r\n        }\r\n        if (+enteredUserAge < 1) {\r\n            setError({\r\n                title: 'Invalid Age',\r\n                message: 'Please enter a valid Age (Age > 0)'\r\n            })\r\n            return;\r\n\r\n        }\r\n        \r\n        props.onAddUser(enteredUserName, enteredUserAge);\r\n        //lifting state up\r\n        \r\n\r\n    }\r\n    // const onUsernameHandler = event => {\r\n    //     setEnteredUsername(event.target.value)\r\n    //  value={enteredUsername} onChange={onUsernameHandler} was passed in input\r\n    // }\r\n    // const onAgeHandler = (event) => {\r\n    //     setEnteredAge(event.target.value);\r\n    //value={enteredAge} onChange={onAgeHandler} was passed in input\r\n\r\n    // }\r\n    const setErrorHandler = () => {\r\n        setError(null)\r\n    }\r\n\r\n    // onError handler we have create in error modal and also we have passed it \r\n    // if not understanding revisit video 131 of react course on udemy\r\n\r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n            {error && <ErrorModal title={error.title} message={error.message} onConfirm={setErrorHandler} />}\r\n\r\n            <Card className={classes.input}>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <label htmlFor='username'>Username</label>\r\n                    <input type='text' id=\"username\" ref={nameInputRef}/>\r\n                    <label htmlFor='Age'>Age Years</label>\r\n                    <input type='number' id=\"Age\"  ref={ageInputRef}/>\r\n                    <Button type='submit'>Add User</Button>\r\n                </form>\r\n            </Card>\r\n\r\n        </Wrapper>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n// in input we are passing entered username as wee need to clear it once the form is submitted\r\nexport default AddUser;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}