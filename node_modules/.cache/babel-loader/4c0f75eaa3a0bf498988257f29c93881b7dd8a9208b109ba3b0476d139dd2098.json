{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\25700\\\\Desktop\\\\React\\\\userInput\\\\src\\\\components\\\\Users\\\\AddUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from './AddUser.module.css';\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddUser = props => {\n  _s();\n  const [enteredUsername, setEnteredUsername] = useState(' ');\n  const [enteredAge, setEnteredAge] = useState(' ');\n  const [error, setError] = useState();\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    console.log('Form Submitted');\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        message: 'Please enter a valid name and age (non empty values)'\n      });\n      return;\n    }\n    if (+enteredAge < 1) {\n      setError({\n        title: 'Invalid Age',\n        message: 'Please enter a valid Age (Age > 0)'\n      });\n      return;\n    }\n    console.log(enteredAge, enteredUsername);\n    props.onAddUser(enteredUsername, enteredAge);\n    //lifting state up\n    setEnteredAge('');\n    setEnteredUsername('');\n  };\n  const onUsernameHandler = event => {\n    setEnteredUsername(event.target.value);\n  };\n  const onAgeHandler = event => {\n    setEnteredAge(event.target.value);\n  };\n  const setErrorHandler = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onErrorHandler: setErrorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: enteredUsername,\n          onChange: onUsernameHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Age\",\n          children: \"Age (Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"Age\",\n          value: enteredAge,\n          onChange: onAgeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n// in input we are passing entered username as wee need to clear it once the form is submitted\n_s(AddUser, \"Zjg0g2wlhFsj2WpyLdYBZLitv9Q=\");\n_c = AddUser;\nexport default AddUser;\nvar _c;\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","Card","classes","Button","ErrorModal","jsxDEV","_jsxDEV","AddUser","props","_s","enteredUsername","setEnteredUsername","enteredAge","setEnteredAge","error","setError","onSubmitHandler","event","preventDefault","console","log","trim","length","title","message","onAddUser","onUsernameHandler","target","value","onAgeHandler","setErrorHandler","children","onErrorHandler","fileName","_jsxFileName","lineNumber","columnNumber","className","input","onSubmit","htmlFor","type","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/25700/Desktop/React/userInput/src/components/Users/AddUser.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from './AddUser.module.css'\r\nimport Button from \"../UI/Button\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\n\r\n\r\n\r\nconst AddUser = (props) =>{\r\n    const [enteredUsername , setEnteredUsername] = useState(' ');\r\n    const [enteredAge , setEnteredAge] = useState(' ');\r\n    const [error , setError] = useState( );\r\n\r\n    const onSubmitHandler = event =>{\r\n        event.preventDefault();\r\n        console.log('Form Submitted')\r\n        if(enteredUsername.trim().length === 0 || enteredAge.trim().length === 0){\r\n            setError({\r\n                title: 'Invalid input' ,\r\n                message: 'Please enter a valid name and age (non empty values)'\r\n            })\r\n            return;\r\n        }\r\n        if(+enteredAge < 1  ){\r\n            setError({\r\n                title: 'Invalid Age' ,\r\n                message: 'Please enter a valid Age (Age > 0)'\r\n            })\r\n            return;\r\n\r\n        }\r\n        console.log(enteredAge , enteredUsername);\r\n        props.onAddUser(enteredUsername , enteredAge);\r\n        //lifting state up\r\n        setEnteredAge('');\r\n        setEnteredUsername('');  \r\n\r\n    }\r\n    const onUsernameHandler = event => {\r\n        setEnteredUsername(event.target.value)\r\n    }\r\n    const onAgeHandler = (event) => {\r\n        setEnteredAge(event.target.value);\r\n\r\n    }\r\n    const setErrorHandler = () => {\r\n        setError(null)\r\n    }\r\n   \r\n  \r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n        { error && <ErrorModal title={error.title} message={error.message} onErrorHandler={setErrorHandler} />}\r\n        \r\n            <Card className={classes.input}>\r\n        <form onSubmit={onSubmitHandler}>\r\n            <label htmlFor='username'>Username</label>\r\n            <input type='text' id=\"username\" value={enteredUsername} onChange={onUsernameHandler}></input>\r\n            <label htmlFor='Age'>Age (Years)</label>\r\n            <input type='number' id=\"Age\" value={enteredAge} onChange={onAgeHandler}></input>\r\n            <Button type='submit' >Add User</Button>\r\n        </form>\r\n        </Card>\r\n        \r\n        </div>\r\n        \r\n\r\n\r\n       \r\n    )\r\n}\r\n// in input we are passing entered username as wee need to clear it once the form is submitted\r\nexport default AddUser;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}